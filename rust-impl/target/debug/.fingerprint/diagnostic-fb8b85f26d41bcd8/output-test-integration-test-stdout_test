{"$message_type":"diagnostic","message":"unused imports: `Severity` and `warning::DiagnosticWarning`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":143,"byte_end":169,"line_start":6,"line_end":6,"column_start":37,"column_end":63,"is_primary":true,"text":[{"text":"    types::{error::DiagnosticError, warning::DiagnosticWarning, Severity},","highlight_start":37,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":171,"byte_end":179,"line_start":6,"line_end":6,"column_start":65,"column_end":73,"is_primary":true,"text":[{"text":"    types::{error::DiagnosticError, warning::DiagnosticWarning, Severity},","highlight_start":65,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":141,"byte_end":179,"line_start":6,"line_end":6,"column_start":35,"column_end":73,"is_primary":true,"text":[{"text":"    types::{error::DiagnosticError, warning::DiagnosticWarning, Severity},","highlight_start":35,"highlight_end":73}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":118,"byte_end":119,"line_start":6,"line_end":6,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    types::{error::DiagnosticError, warning::DiagnosticWarning, Severity},","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":179,"byte_end":180,"line_start":6,"line_end":6,"column_start":73,"column_end":74,"is_primary":true,"text":[{"text":"    types::{error::DiagnosticError, warning::DiagnosticWarning, Severity},","highlight_start":73,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Severity` and `warning::DiagnosticWarning`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mdiagnostic/tests/stdout_test.rs:6:37\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    types::{error::DiagnosticError, warning::DiagnosticWarning, Severity},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 3 arguments but 6 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":570,"byte_end":637,"line_start":23,"line_end":27,"column_start":7,"column_end":8,"is_primary":false,"text":[{"text":"      Span {","highlight_start":7,"highlight_end":13},{"text":"        start: 0,","highlight_start":1,"highlight_end":18},{"text":"        end: 0,","highlight_start":1,"highlight_end":16},{"text":"        line: 200,","highlight_start":1,"highlight_end":19},{"text":"      },","highlight_start":1,"highlight_end":8}],"label":"unexpected argument #3 of type `Span`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":663,"byte_end":681,"line_start":29,"line_end":29,"column_start":7,"column_end":25,"is_primary":false,"text":[{"text":"      \"let x: int = 42;\",","highlight_start":7,"highlight_end":25}],"label":"unexpected argument #5 of type `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":689,"byte_end":691,"line_start":30,"line_end":30,"column_start":7,"column_end":9,"is_primary":false,"text":[{"text":"      16,","highlight_start":7,"highlight_end":9}],"label":"unexpected argument #6 of type `{integer}`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":463,"byte_end":478,"line_start":20,"line_end":20,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    let diagnostic = Diagnostic::new(","highlight_start":22,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/run/media/wildduck/duck/wildduck/@duck/@duck-lox/rust-impl/diagnostic/src/diagnostic.rs","byte_start":635,"byte_end":638,"line_start":30,"line_end":30,"column_start":10,"column_end":13,"is_primary":true,"text":[{"text":"  pub fn new(code: DiagnosticCode, message: &'a str, file_path: &'a str) -> Self {","highlight_start":10,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra arguments","code":null,"level":"help","spans":[{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":562,"byte_end":637,"line_start":22,"line_end":27,"column_start":23,"column_end":8,"is_primary":true,"text":[{"text":"      \"Code not found\",","highlight_start":23,"highlight_end":24},{"text":"      Span {","highlight_start":1,"highlight_end":13},{"text":"        start: 0,","highlight_start":1,"highlight_end":18},{"text":"        end: 0,","highlight_start":1,"highlight_end":16},{"text":"        line: 200,","highlight_start":1,"highlight_end":19},{"text":"      },","highlight_start":1,"highlight_end":8}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":655,"byte_end":681,"line_start":28,"line_end":29,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"      \"main.txt\",","highlight_start":17,"highlight_end":18},{"text":"      \"let x: int = 42;\",","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"diagnostic/tests/stdout_test.rs","byte_start":681,"byte_end":691,"line_start":29,"line_end":30,"column_start":25,"column_end":9,"is_primary":true,"text":[{"text":"      \"let x: int = 42;\",","highlight_start":25,"highlight_end":26},{"text":"      16,","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 3 arguments but 6 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mdiagnostic/tests/stdout_test.rs:20:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let diagnostic = Diagnostic::new(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m      Span {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        start: 0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        end: 0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        line: 200,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument #3 of type `Span`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m      \"main.txt\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m      \"let x: int = 42;\",\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument #5 of type `&'static str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m      16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument #6 of type `{integer}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/run/media/wildduck/duck/wildduck/@duck/@duck-lox/rust-impl/diagnostic/src/diagnostic.rs:30:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub fn new(code: DiagnosticCode, message: &'a str, file_path: &'a str) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m      \"Code not found\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m      \"main.txt\",\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}
